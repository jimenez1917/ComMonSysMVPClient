{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Camera } from 'expo-camera';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Transactions() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      scanned = _useState4[0],\n      setScanned = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sending = _useState6[0],\n      setSending = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === \"granted\");\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n        data = _ref.data;\n    setScanned(true);\n    alert(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n  };\n\n  if (hasPermission === null) {\n    return _jsx(Text, {\n      children: \"Requesting for camera permission\"\n    });\n  }\n\n  if (hasPermission === false) {\n    return _jsx(Text, {\n      children: \"No access to camera\"\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Picker, {\n      style: styles.picker,\n      itemStyle: styles.pickerItem,\n      children: [_jsx(Picker.Item, {\n        label: \"Poblado | $30K\",\n        value: \"poblado\"\n      }), _jsx(Picker.Item, {\n        label: \"ComMonSys | $33K\",\n        value: \"commonsys\"\n      })]\n    }), _jsx(Pressable, {\n      style: {\n        width: 200,\n        height: 200,\n        flex: 1,\n        alignItems: \"center\"\n      },\n      onPress: function onPress() {\n        setSending(!sending);\n      },\n      children: sending ? _jsx(Camera, {\n        onBarCodeScanned: handleBarCodeScanned,\n        style: {\n          flex: 1\n        }\n      }) : _jsx(Image, {\n        source: require(\"../../assets/qrCode.png\"),\n        style: {\n          flex: 1\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  picker: {\n    width: 250\n  },\n  pickerItem: {\n    color: \"black\"\n  }\n});","map":{"version":3,"sources":["/Users/juandominguez/development/ComMonSysMVPClient/components/transactions/transactions.js"],"names":["React","useState","useEffect","Camera","Transactions","hasPermission","setHasPermission","scanned","setScanned","sending","setSending","requestCameraPermissionsAsync","status","handleBarCodeScanned","type","data","alert","styles","container","picker","pickerItem","width","height","flex","alignItems","require","StyleSheet","create","flexDirection","justifyContent","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Image, Text, View, StyleSheet, Picker, Pressable } from \"react-native\";\nimport {Camera} from 'expo-camera';\n\nexport default function Transactions() {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n  const [sending, setSending] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestCameraPermissionsAsync();\n      setHasPermission(status === \"granted\");\n    })();\n  }, []);\n\n  const handleBarCodeScanned = ({ type, data }) => {\n    setScanned(true);\n    alert(`Bar code with type ${type} and data ${data} has been scanned!`);\n  };\n\n  if (hasPermission === null) {\n    return <Text>Requesting for camera permission</Text>;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n\n  return (\n    <View style={styles.container}>\n      <Picker style={styles.picker} itemStyle={styles.pickerItem}>\n              <Picker.Item label=\"Poblado | $30K\" value=\"poblado\" />\n              <Picker.Item label=\"ComMonSys | $33K\" value=\"commonsys\" />\n      </Picker>\n      <Pressable\n        style={{\n          width: 200,\n          height: 200,\n          flex: 1,\n          alignItems: \"center\",\n        }}\n        onPress={() => {\n          setSending(!sending);\n        }}\n      >\n        {sending ? (\n            <Camera onBarCodeScanned={handleBarCodeScanned} style={{flex:1}}/>\n      ) : (\n        <Image\n          source={require(\"../../assets/qrCode.png\")}\n          style={{flex:1}}\n        />\n      )}\n      </Pressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  picker: {\n    width: 250,\n  },\n  pickerItem: {\n    color: \"black\",\n  },\n});"]},"metadata":{},"sourceType":"module"}